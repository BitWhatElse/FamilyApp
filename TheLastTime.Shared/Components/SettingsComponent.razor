<ul class="nav flex-column mx-2 mt-2">

    @if (DataService.Settings.ShowSearch)
    {
        <li class="nav-item pb-2">
            <div class="input-group flex-nowrap">
                <TextEdit Size="@Theme.Size" @bind-Text="@DataService.HabitFilter" Placeholder="Search" />

                <div class="input-group-append">
                    <Button Color="Color.Primary" Outline="true" Size="@Theme.Size" @onclick="@(() => { DataService.HabitFilter = string.Empty; })"><span class="fa fa-fw fa-times"></span></Button>
                </div>
            </div>
        </li>
    }

    @if (DataService.Settings.ShowFilters)
    {
        <li class="nav-item pb-2">
            <span class="text-light">@( DataService.Settings.ShowAdvancedFilters ? "Advanced filters:" : "Filters" )</span>
        </li>

        <li class="nav-item pb-2">
            <CheckBox IsTriState="@DataService.Settings.ShowAdvancedFilters" Checked="@DataService.Settings.ShowPinned" CheckedChanged="@(async (val) => { DataService.Settings.ShowPinned = val; await DataService.SaveSettings(); })"><span class="text-light">@GetFilter(DataService.Settings.ShowPinned) Pinned</span></CheckBox>
        </li>

        <li class="nav-item pb-2">
            <CheckBox IsTriState="@DataService.Settings.ShowAdvancedFilters" Checked="@DataService.Settings.ShowStarred" CheckedChanged="@(async (val) => { DataService.Settings.ShowStarred = val; await DataService.SaveSettings(); })"><span class="text-light">@GetFilter(DataService.Settings.ShowStarred) Starred</span></CheckBox>
        </li>

        <li class="nav-item pb-2">
            <CheckBox IsTriState="@DataService.Settings.ShowAdvancedFilters" Checked="@DataService.Settings.ShowTwoMinute" CheckedChanged="@(async (val) => { DataService.Settings.ShowTwoMinute = val; await DataService.SaveSettings(); })"><span class="text-light">@GetFilter(DataService.Settings.ShowTwoMinute) 2 min</span></CheckBox>
        </li>

        <li class="nav-item pb-2">
            <CheckBox IsTriState="@DataService.Settings.ShowAdvancedFilters" Checked="@DataService.Settings.ShowNeverDone" CheckedChanged="@(async (val) => { DataService.Settings.ShowNeverDone = val; await DataService.SaveSettings(); })"><span class="text-light">@GetFilter(DataService.Settings.ShowNeverDone) Never done</span></CheckBox>
        </li>

        <li class="nav-item pb-2">
            <CheckBox IsTriState="@DataService.Settings.ShowAdvancedFilters" Checked="@DataService.Settings.ShowDoneOnce" CheckedChanged="@(async (val) => { DataService.Settings.ShowDoneOnce = val; await DataService.SaveSettings(); })"><span class="text-light">@GetFilter(DataService.Settings.ShowDoneOnce) Done once</span></CheckBox>
        </li>

        <li class="nav-item py-0">
            <Field>
                <FieldLabel>
                    <CheckBox IsTriState="@DataService.Settings.ShowAdvancedFilters" Checked="@DataService.Settings.ShowRatioOverPercentMin" CheckedChanged="@(async (val) => { DataService.Settings.ShowRatioOverPercentMin = val; await DataService.SaveSettings(); })"><span class="text-light">@GetFilter(DataService.Settings.ShowRatioOverPercentMin) Ratio over @DataService.Settings.ShowPercentMin %</span></CheckBox>
                </FieldLabel>
                <Slider TValue="long" Min="0" Max="100" Step="5" Value="@DataService.Settings.ShowPercentMin" ValueChanged="@(async (val) => { DataService.Settings.ShowPercentMin = val; await DataService.SaveSettings(); })" />
            </Field>
        </li>
    }

    @if (DataService.Settings.ShowRatioOptions)
    {
        <li class="nav-item py-0">
            <Field>
                <FieldLabel Class="text-light">Select ratio:</FieldLabel>
                <RadioGroup TValue="Ratio" CheckedValue="@DataService.Settings.Ratio" CheckedValueChanged="@(async (val) => { DataService.Settings.Ratio = val; await DataService.SaveSettings(); })">
                    <Radio TValue="Ratio" Value="@(Ratio.ElapsedToAverage)"><span class="text-light">Elapsed time / average interval</span></Radio>
                    <Radio TValue="Ratio" Value="@(Ratio.ElapsedToDesired)"><span class="text-light">Elapsed time / desired interval</span></Radio>
                    <Radio TValue="Ratio" Value="@(Ratio.AverageToDesired)"><span class="text-light">Average / desired interval</span></Radio>
                </RadioGroup>
            </Field>
        </li>
    }

    @if (DataService.Settings.ShowSort)
    {
        <li class="nav-item py-0">
            <Field>
                <FieldLabel Class="text-light">Sort by:</FieldLabel>

                <div class="input-group flex-nowrap">
                    @if (!DataService.Settings.ShowAllSelectOptions)
                    {
                        <div class="input-group-prepend">
                            <Button Color="Color.Primary" Outline="true" Size="@Theme.Size" @onclick="@(() => PreviousSort())"><span class="fa fa-fw fa-chevron-left"></span></Button>
                        </div>
                    }

                    <Select TValue="Sort" MaxVisibleItems="@(DataService.Settings.ShowAllSelectOptions ? 4 : null)" Size="@Theme.Size" SelectedValue="@Sort" SelectedValueChanged="async (Sort val) => { Sort = val; }">
                        <SelectItem Value="@Sort.Index">index</SelectItem>
                        <SelectItem Value="@Sort.Description">description</SelectItem>
                        <SelectItem Value="@Sort.ElapsedTime">elapsed time</SelectItem>
                        <SelectItem Value="@Sort.SelectedRatio">selected ratio</SelectItem>
                    </Select>

                    @if (!DataService.Settings.ShowAllSelectOptions)
                    {
                        <div class="input-group-append">
                            <Button Color="Color.Primary" Outline="true" Size="@Theme.Size" @onclick="@(() => NextSort())"><span class="fa fa-fw fa-chevron-right"></span></Button>
                        </div>
                    }
                </div>
            </Field>
        </li>
    }

</ul>